name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Lint with flake8
      run: |
        ENV_PATH="/tmp/.venv-flake8"
        python -m venv $ENV_PATH
        source $ENV_PATH/bin/activate
        python -m pip install --upgrade pip
        pip install flake8
        flake8 .
        deactivate

    - name: Test current version
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
          ENV_PATH="/tmp/.venv-current"
          python -m venv $ENV_PATH
          source $ENV_PATH/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pytest --cov=./pydantic2graphene
          codecov --token="$CODECOV_TOKEN"
          deactivate

    - name: Test graphene==2.1.8
      if: ${{ always() }}
      env:
        VERSION: "2.1.8"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.1.7
      if: ${{ always() }}
      env:
        VERSION: "2.1.7"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.1.6
      if: ${{ always() }}
      env:
        VERSION: "2.1.6"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.1.5
      if: ${{ always() }}
      env:
        VERSION: "2.1.5"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.1.3
      if: ${{ always() }}
      env:
        VERSION: "2.1.3"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.1.2
      if: ${{ always() }}
      env:
        VERSION: "2.1.2"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.1.1
      if: ${{ always() }}
      env:
        VERSION: "2.1.1"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.1
      if: ${{ always() }}
      env:
        VERSION: "2.1"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.0.1
      if: ${{ always() }}
      env:
        VERSION: "2.0.1"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install "graphene==$VERSION" iso8601==0.1.12 pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==2.0
      if: ${{ always() }}
      env:
        VERSION: "2.0"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==2.0 graphql-relay==0.4.5 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.4.2
      if: ${{ always() }}
      env:
        VERSION: "1.4.2"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.1 graphql-relay==0.4.5 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.4.1
      if: ${{ always() }}
      env:
        VERSION: "1.4.1"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.1 graphql-relay==0.4.5 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.4
      if: ${{ always() }}
      env:
        VERSION: "1.4"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.1 graphql-relay==0.4.5 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.3
      if: ${{ always() }}
      env:
        VERSION: "1.3"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0.1 graphql-relay==0.4.5 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.2
      if: ${{ always() }}
      env:
        VERSION: "1.2"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0.1 graphql-relay==0.4.5 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.1.3
      if: ${{ always() }}
      env:
        VERSION: "1.1.3"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0.1 graphql-relay==0.4.5 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.1.2
      if: ${{ always() }}
      env:
        VERSION: "1.1.2"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0 graphql-relay==0.4.4 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.1.1
      if: ${{ always() }}
      env:
        VERSION: "1.1.1"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0 graphql-relay==0.4.4 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.1
      if: ${{ always() }}
      env:
        VERSION: "1.1"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0 graphql-relay==0.4.4 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.0.2
      if: ${{ always() }}
      env:
        VERSION: "1.0.2"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0 graphql-relay==0.4.4 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.0.1
      if: ${{ always() }}
      env:
        VERSION: "1.0.1"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0 graphql-relay==0.4.4 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test graphene==1.0
      if: ${{ always() }}
      env:
        VERSION: "1.0"
      run: |
          python -m venv "/tmp/.venv-graphene-$VERSION"
          source "/tmp/.venv-graphene-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphql-core==1.0 graphql-relay==0.4.4 iso8601==0.1.12 "graphene==$VERSION" pydantic==1.5.1 pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==1.5.1
      if: ${{ always() }}
      env:
        VERSION: "1.5.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==1.5
      if: ${{ always() }}
      env:
        VERSION: "1.5"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==1.4
      if: ${{ always() }}
      env:
        VERSION: "1.4"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==1.3
      if: ${{ always() }}
      env:
        VERSION: "1.3"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==1.2
      if: ${{ always() }}
      env:
        VERSION: "1.2"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==1.1.1
      if: ${{ always() }}
      env:
        VERSION: "1.1.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==1.0
      if: ${{ always() }}
      env:
        VERSION: "1.0"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.32.2
      if: ${{ always() }}
      env:
        VERSION: "0.32.2"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.32.1
      if: ${{ always() }}
      env:
        VERSION: "0.32.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.32
      if: ${{ always() }}
      env:
        VERSION: "0.32"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.31.1
      if: ${{ always() }}
      env:
        VERSION: "0.31.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.31
      if: ${{ always() }}
      env:
        VERSION: "0.31"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.30.1
      if: ${{ always() }}
      env:
        VERSION: "0.30.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.30
      if: ${{ always() }}
      env:
        VERSION: "0.30"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.29
      if: ${{ always() }}
      env:
        VERSION: "0.29"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.28
      if: ${{ always() }}
      env:
        VERSION: "0.28"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.27
      if: ${{ always() }}
      env:
        VERSION: "0.27"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.26
      if: ${{ always() }}
      env:
        VERSION: "0.26"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.25
      if: ${{ always() }}
      env:
        VERSION: "0.25"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.24
      if: ${{ always() }}
      env:
        VERSION: "0.24"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.23
      if: ${{ always() }}
      env:
        VERSION: "0.23"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.22
      if: ${{ always() }}
      env:
        VERSION: "0.22"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.21
      if: ${{ always() }}
      env:
        VERSION: "0.21"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.20.1
      if: ${{ always() }}
      env:
        VERSION: "0.20.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.20
      if: ${{ always() }}
      env:
        VERSION: "0.20"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.19
      if: ${{ always() }}
      env:
        VERSION: "0.19"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.18.2
      if: ${{ always() }}
      env:
        VERSION: "0.18.2"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.18
      if: ${{ always() }}
      env:
        VERSION: "0.18"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.17
      if: ${{ always() }}
      env:
        VERSION: "0.17"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.16.1
      if: ${{ always() }}
      env:
        VERSION: "0.16.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.16
      if: ${{ always() }}
      env:
        VERSION: "0.16"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.15
      if: ${{ always() }}
      env:
        VERSION: "0.15"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.14
      if: ${{ always() }}
      env:
        VERSION: "0.14"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.13
      if: ${{ always() }}
      env:
        VERSION: "0.13"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.12
      if: ${{ always() }}
      env:
        VERSION: "0.12"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.11
      if: ${{ always() }}
      env:
        VERSION: "0.11"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.10
      if: ${{ always() }}
      env:
        VERSION: "0.10"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.9
      if: ${{ always() }}
      env:
        VERSION: "0.9"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.8
      if: ${{ always() }}
      env:
        VERSION: "0.8"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.7
      if: ${{ always() }}
      env:
        VERSION: "0.7"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.6
      if: ${{ always() }}
      env:
        VERSION: "0.6"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.5
      if: ${{ always() }}
      env:
        VERSION: "0.5"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.4
      if: ${{ always() }}
      env:
        VERSION: "0.4"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.3
      if: ${{ always() }}
      env:
        VERSION: "0.3"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.2
      if: ${{ always() }}
      env:
        VERSION: "0.2"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.1
      if: ${{ always() }}
      env:
        VERSION: "0.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate

    - name: Test pydantic==0.0.1
      if: ${{ always() }}
      env:
        VERSION: "0.0.1"
      run: |
          python -m venv "/tmp/.venv-pydantic-$VERSION"
          source "/tmp/.venv-pydantic-$VERSION/bin/activate"
          python -m pip install --upgrade pip
          pip install graphene==2.1.8 "pydantic==$VERSION" pytest==5.4.3
          pytest
          deactivate
